#include <SPI.h>
#include <Ethernet.h>
#include "DHT.h" //library sensor yang telah diimportkan
#define DHTPIN 7 //pin apa yang digunakan
#define DHTTYPE DHT11 //tipe sensor DHT 

DHT dht(DHTPIN, DHTTYPE);
int piezoPin = 6;
int ledPin = 13;

long previousMillis = 0;
unsigned long currentMillis = 0;
long interval = 250000; // READING INTERVAL

byte mac[] = {
  0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED
};
IPAddress ip(192, 168, 1, 181); // ip arduino yang diambil secara acak
IPAddress server(192, 168, 1, 13); // ip ethernet dari ipconfig cmd
EthernetClient client;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600); //untuk komunikasi serial  
  while(!Serial){
    ;//wait for serial port to connect
    }

  // start the Ethernet connection:
  if (Ethernet.begin(mac) == 0) {
    Serial.println("Failed to configure Ethernet using DHCP");
    // no point in carrying on, so do nothing forevermore:
    // try to congifure using IP address instead of DHCP:
    Ethernet.begin(mac, ip);
  }
  // give the Ethernet shield a second to initialize:
  delay(1000);
  Serial.println("connecting...");

  // if you get a connection, report back via serial:
  if (client.connect(server,8095)) {
    Serial.println("connected");
  }
  else {
    // if you didn't get a connection to the server:
    Serial.println("connection failed");
  }
    
  Serial.println("Pengujian DHT11"); //penulisan serial di monitor
  dht.begin(); //prosedur mulai pembacaan modul sensor
  pinMode (piezoPin, OUTPUT);
  pinMode(ledPin,OUTPUT);

  
}

void loop() {
  // put your main code here, to run repeatedly:
  float h = dht.readHumidity();//dht11
  float c = dht.readTemperature();
  // if there are incoming bytes available
  // from the server, read them and print them:
  if (client.available()) {
    char c = client.read();
    Serial.print(c);
  }

  // Make a HTTP request:
    Serial.print("Temperature: ");
    Serial.println(c);
    Serial.print("Humidity: ");
    Serial.println(h);
    client.print( "GET /monitoring/write_data.php?"); // php??
    client.print("temperature=");
    client.print(c);
    client.print("&");
    client.print("humidity=");
    client.print(h);
    client.println( " HTTP/1.1 200 OK");
    client.print( "Host:" );//ur web server
    client.println(server);
    client.println( "Content-Type: application/x-www-form-urlencoded" );
    client.println( "Connection: close" );
    client.println();
    delay(5000);

  // if the server's disconnected, stop the client:
  if (!client.connected()) {
    Serial.println();
    Serial.println("disconnecting.");
    client.stop();

    // do nothing forevermore:
    while(true);
  }
    
}
